name: ðŸš€ Deploy website on push
on: 
  push:
      tags:
        - beta/**
        - release/**
  
jobs:
  web-deploy:
    name: ðŸŽ‰ Deploy
    runs-on: ubuntu-latest
    steps:
    - name: ðŸšš Get latest code
      uses: actions/checkout@v4

    - name: Get Tag info
      run: echo "Running workflow for tag ${{ github.ref_name }}"
    
    - name: ðŸ“‚ Sync files into release if release/ tag
      if: startsWith(github.ref_name, 'release/')
      uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      with:
        server: winweb20.servicehoster.ch
        username: h208686_dta24_bs
        password: ${{ secrets.SEVIS_SECRET }}
        local-dir: ./public/
        server-dir: ./
        
    - name: Sync files into beta if beta/ tag
      if: startsWith(github.ref_name, 'beta/')
      uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      with:
        server: winweb20.servicehoster.ch
        username: h208686_dta24_bs
        password: ${{ secrets.SEVIS_SECRET }}
        local-dir: ./public/
        server-dir: ./beta/
  
  create-release:
    name: ðŸš€ Create release
    runs-on: ubuntu-latest
    steps:
    - name: ðŸšš Get latest code
      uses: actions/checkout@v4

    - name: extract version from tag
      id: extract_version
      run: |
        TAG_NAME="${{ github.ref_name}}"
        # Entferne das PrÃ¤fix "release/" oder "beta/"
        VERSION="${TAG_NAME#*/}"
        echo "Version: $VERSION"
        echo "version=$VERSION" >> $GITHUB_OUTPUT

        # PrÃ¼fe ob es sich um eine Beta-Version handelt
        if [[ $TAG_NAME == beta/* ]]; then
          echo "is_beta=true" >> $GITHUB_OUTPUT
        else
          echo "is_beta=false" >> $GITHUB_OUTPUT
        fi

    - name: ðŸ“‚ create ZIP-Archive
      run: |
        VERSION="${{ steps.extract_version.outputs.version }}"
        cd public
        zip -r ../DevOps-Demo-${VERSION}.zip .
        cd ..
        ls -la DevOps-Demo-${VERSION}.zip
        
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        name: ${{ steps.extract_version.outputs.version }}
        tag: ${{ github.ref }}
        artifacts: "DevOps-Demo-${{ steps.extract_version.outputs.version }}.zip"
        prerelease: ${{ steps.extract_version.outputs.is_beta == 'true' }}
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}

